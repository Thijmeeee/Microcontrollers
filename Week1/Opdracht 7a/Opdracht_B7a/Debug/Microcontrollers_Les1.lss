
Microcontrollers_Les1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000290  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000023c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000290  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002c0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  000002fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b6b  00000000  00000000  00000344  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000821  00000000  00000000  00000eaf  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000477  00000000  00000000  000016d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000074  00000000  00000000  00001b48  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000477  00000000  00000000  00001bbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003b4  00000000  00000000  00002033  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  000023e7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	1a d0       	rcall	.+52     	; 0xce <main>
  9a:	ce c0       	rjmp	.+412    	; 0x238 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <setStateStart>:
#include <util/delay.h>

#define BIT(x)(1 << (x))

void setStateStart(){
	PORTA = 0;
  9e:	1b ba       	out	0x1b, r1	; 27
	PORTB = 0;
  a0:	18 ba       	out	0x18, r1	; 24
	PORTC = 0;
  a2:	15 ba       	out	0x15, r1	; 21
  a4:	08 95       	ret

000000a6 <setEndState>:
}

void setEndState(){
	PORTA = 0xFF;
  a6:	8f ef       	ldi	r24, 0xFF	; 255
  a8:	8b bb       	out	0x1b, r24	; 27
	PORTB = 0xFF;
  aa:	88 bb       	out	0x18, r24	; 24
	PORTC = 0xFF;
  ac:	85 bb       	out	0x15, r24	; 21
  ae:	08 95       	ret

000000b0 <setStateA>:
}


void setStateA(){
	PORTA = 0xFF;
  b0:	8f ef       	ldi	r24, 0xFF	; 255
  b2:	8b bb       	out	0x1b, r24	; 27
	PORTB = 0;
  b4:	18 ba       	out	0x18, r1	; 24
	PORTC = 0;
  b6:	15 ba       	out	0x15, r1	; 21
  b8:	08 95       	ret

000000ba <setStateB>:
}

void setStateB(){
	PORTA = 0;
  ba:	1b ba       	out	0x1b, r1	; 27
	PORTB = 0xFF;
  bc:	8f ef       	ldi	r24, 0xFF	; 255
  be:	88 bb       	out	0x18, r24	; 24
	PORTC = 0;
  c0:	15 ba       	out	0x15, r1	; 21
  c2:	08 95       	ret

000000c4 <setStateC>:
}

void setStateC(){
	PORTA = 0;
  c4:	1b ba       	out	0x1b, r1	; 27
	PORTB = 0;
  c6:	18 ba       	out	0x18, r1	; 24
	PORTC = 0xFF;
  c8:	8f ef       	ldi	r24, 0xFF	; 255
  ca:	85 bb       	out	0x15, r24	; 21
  cc:	08 95       	ret

000000ce <main>:
}

int main(void)
{
	DDRA = 0b11111111; // DDR is direction, A is the PORT --> OUTPUT
  ce:	8f ef       	ldi	r24, 0xFF	; 255
  d0:	8a bb       	out	0x1a, r24	; 26
	DDRB = 0b11111111; // DDR is direction, A is the PORT --> OUTPUT
  d2:	87 bb       	out	0x17, r24	; 23
	DDRC = 0b11111111; // DDR is direction, A is the PORT --> OUTPUT
  d4:	84 bb       	out	0x14, r24	; 20
	
	PORTD = 0x01;
  d6:	81 e0       	ldi	r24, 0x01	; 1
  d8:	82 bb       	out	0x12, r24	; 18
	
	int currentstate = 0;
	setStateStart();
  da:	e1 df       	rcall	.-62     	; 0x9e <setStateStart>
	DDRB = 0b11111111; // DDR is direction, A is the PORT --> OUTPUT
	DDRC = 0b11111111; // DDR is direction, A is the PORT --> OUTPUT
	
	PORTD = 0x01;
	
	int currentstate = 0;
  dc:	80 e0       	ldi	r24, 0x00	; 0
  de:	90 e0       	ldi	r25, 0x00	; 0
	setStateStart();
	
    /* Replace with your application code */
    while (1) 
    {
		switch (currentstate){
  e0:	82 30       	cpi	r24, 0x02	; 2
  e2:	91 05       	cpc	r25, r1
  e4:	09 f4       	brne	.+2      	; 0xe8 <main+0x1a>
  e6:	4c c0       	rjmp	.+152    	; 0x180 <main+0xb2>
  e8:	34 f4       	brge	.+12     	; 0xf6 <main+0x28>
  ea:	00 97       	sbiw	r24, 0x00	; 0
  ec:	69 f0       	breq	.+26     	; 0x108 <main+0x3a>
  ee:	81 30       	cpi	r24, 0x01	; 1
  f0:	91 05       	cpc	r25, r1
  f2:	41 f1       	breq	.+80     	; 0x144 <main+0x76>
  f4:	f5 cf       	rjmp	.-22     	; 0xe0 <main+0x12>
  f6:	83 30       	cpi	r24, 0x03	; 3
  f8:	91 05       	cpc	r25, r1
  fa:	09 f4       	brne	.+2      	; 0xfe <main+0x30>
  fc:	6e c0       	rjmp	.+220    	; 0x1da <main+0x10c>
  fe:	84 30       	cpi	r24, 0x04	; 4
 100:	91 05       	cpc	r25, r1
 102:	09 f4       	brne	.+2      	; 0x106 <main+0x38>
 104:	8a c0       	rjmp	.+276    	; 0x21a <main+0x14c>
 106:	ec cf       	rjmp	.-40     	; 0xe0 <main+0x12>
			case 0:
				if (PIND & 0b01000000) // 6
 108:	86 9b       	sbis	0x10, 6	; 16
				{
					setStateA();
 10a:	0d c0       	rjmp	.+26     	; 0x126 <main+0x58>
 10c:	d1 df       	rcall	.-94     	; 0xb0 <setStateA>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 10e:	2f ef       	ldi	r18, 0xFF	; 255
 110:	84 e3       	ldi	r24, 0x34	; 52
 112:	9c e0       	ldi	r25, 0x0C	; 12
 114:	21 50       	subi	r18, 0x01	; 1
 116:	80 40       	sbci	r24, 0x00	; 0
 118:	90 40       	sbci	r25, 0x00	; 0
 11a:	e1 f7       	brne	.-8      	; 0x114 <main+0x46>
 11c:	00 c0       	rjmp	.+0      	; 0x11e <main+0x50>
 11e:	00 00       	nop
					currentstate = 1;
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	dd cf       	rjmp	.-70     	; 0xe0 <main+0x12>
					_delay_ms(500);
				}
				else if (PIND & 0b00100000){ // 5
 126:	85 9b       	sbis	0x10, 5	; 16
					setStateB();
 128:	db cf       	rjmp	.-74     	; 0xe0 <main+0x12>
 12a:	c7 df       	rcall	.-114    	; 0xba <setStateB>
 12c:	2f ef       	ldi	r18, 0xFF	; 255
 12e:	84 e3       	ldi	r24, 0x34	; 52
 130:	9c e0       	ldi	r25, 0x0C	; 12
 132:	21 50       	subi	r18, 0x01	; 1
 134:	80 40       	sbci	r24, 0x00	; 0
 136:	90 40       	sbci	r25, 0x00	; 0
 138:	e1 f7       	brne	.-8      	; 0x132 <main+0x64>
 13a:	00 c0       	rjmp	.+0      	; 0x13c <main+0x6e>
 13c:	00 00       	nop
					currentstate = 2;
 13e:	82 e0       	ldi	r24, 0x02	; 2
 140:	90 e0       	ldi	r25, 0x00	; 0
					_delay_ms(500);
				}
				break;
			case 1:
			    if (PIND & 0b10000000){ // 7
 142:	ce cf       	rjmp	.-100    	; 0xe0 <main+0x12>
 144:	87 9b       	sbis	0x10, 7	; 16
					setStateStart();
 146:	0d c0       	rjmp	.+26     	; 0x162 <main+0x94>
 148:	aa df       	rcall	.-172    	; 0x9e <setStateStart>
 14a:	2f ef       	ldi	r18, 0xFF	; 255
 14c:	84 e3       	ldi	r24, 0x34	; 52
 14e:	9c e0       	ldi	r25, 0x0C	; 12
 150:	21 50       	subi	r18, 0x01	; 1
 152:	80 40       	sbci	r24, 0x00	; 0
 154:	90 40       	sbci	r25, 0x00	; 0
 156:	e1 f7       	brne	.-8      	; 0x150 <main+0x82>
 158:	00 c0       	rjmp	.+0      	; 0x15a <main+0x8c>
 15a:	00 00       	nop
					currentstate = 0;
 15c:	80 e0       	ldi	r24, 0x00	; 0
 15e:	90 e0       	ldi	r25, 0x00	; 0
					_delay_ms(500);
				}
				else if (PIND & 0b00100000){ // 5
 160:	bf cf       	rjmp	.-130    	; 0xe0 <main+0x12>
 162:	85 9b       	sbis	0x10, 5	; 16
					setStateB();
 164:	bd cf       	rjmp	.-134    	; 0xe0 <main+0x12>
 166:	a9 df       	rcall	.-174    	; 0xba <setStateB>
 168:	2f ef       	ldi	r18, 0xFF	; 255
 16a:	84 e3       	ldi	r24, 0x34	; 52
 16c:	9c e0       	ldi	r25, 0x0C	; 12
 16e:	21 50       	subi	r18, 0x01	; 1
 170:	80 40       	sbci	r24, 0x00	; 0
 172:	90 40       	sbci	r25, 0x00	; 0
 174:	e1 f7       	brne	.-8      	; 0x16e <main+0xa0>
 176:	00 c0       	rjmp	.+0      	; 0x178 <main+0xaa>
 178:	00 00       	nop
					currentstate = 2;
 17a:	82 e0       	ldi	r24, 0x02	; 2
 17c:	90 e0       	ldi	r25, 0x00	; 0
					_delay_ms(500);
				}
				break;
			case 2:
				if (PIND & 0b10000000){ // 7
 17e:	b0 cf       	rjmp	.-160    	; 0xe0 <main+0x12>
 180:	87 9b       	sbis	0x10, 7	; 16
					setStateStart();
 182:	0d c0       	rjmp	.+26     	; 0x19e <main+0xd0>
 184:	8c df       	rcall	.-232    	; 0x9e <setStateStart>
 186:	2f ef       	ldi	r18, 0xFF	; 255
 188:	84 e3       	ldi	r24, 0x34	; 52
 18a:	9c e0       	ldi	r25, 0x0C	; 12
 18c:	21 50       	subi	r18, 0x01	; 1
 18e:	80 40       	sbci	r24, 0x00	; 0
 190:	90 40       	sbci	r25, 0x00	; 0
 192:	e1 f7       	brne	.-8      	; 0x18c <main+0xbe>
 194:	00 c0       	rjmp	.+0      	; 0x196 <main+0xc8>
					currentstate = 0;
 196:	00 00       	nop
 198:	80 e0       	ldi	r24, 0x00	; 0
 19a:	90 e0       	ldi	r25, 0x00	; 0
					_delay_ms(500);
				}
				else if (PIND & 0b01000000) // 6
 19c:	a1 cf       	rjmp	.-190    	; 0xe0 <main+0x12>
 19e:	86 9b       	sbis	0x10, 6	; 16
				{
					setStateA();
 1a0:	0d c0       	rjmp	.+26     	; 0x1bc <main+0xee>
 1a2:	86 df       	rcall	.-244    	; 0xb0 <setStateA>
 1a4:	2f ef       	ldi	r18, 0xFF	; 255
 1a6:	84 e3       	ldi	r24, 0x34	; 52
 1a8:	9c e0       	ldi	r25, 0x0C	; 12
 1aa:	21 50       	subi	r18, 0x01	; 1
 1ac:	80 40       	sbci	r24, 0x00	; 0
 1ae:	90 40       	sbci	r25, 0x00	; 0
 1b0:	e1 f7       	brne	.-8      	; 0x1aa <main+0xdc>
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <main+0xe6>
					currentstate = 1;
 1b4:	00 00       	nop
 1b6:	81 e0       	ldi	r24, 0x01	; 1
 1b8:	90 e0       	ldi	r25, 0x00	; 0
					_delay_ms(500);
				}
				else if (PIND & 0b00100000){ // 5
 1ba:	92 cf       	rjmp	.-220    	; 0xe0 <main+0x12>
 1bc:	85 9b       	sbis	0x10, 5	; 16
					setStateC();
 1be:	90 cf       	rjmp	.-224    	; 0xe0 <main+0x12>
 1c0:	81 df       	rcall	.-254    	; 0xc4 <setStateC>
 1c2:	2f ef       	ldi	r18, 0xFF	; 255
 1c4:	84 e3       	ldi	r24, 0x34	; 52
 1c6:	9c e0       	ldi	r25, 0x0C	; 12
 1c8:	21 50       	subi	r18, 0x01	; 1
 1ca:	80 40       	sbci	r24, 0x00	; 0
 1cc:	90 40       	sbci	r25, 0x00	; 0
 1ce:	e1 f7       	brne	.-8      	; 0x1c8 <main+0xfa>
 1d0:	00 c0       	rjmp	.+0      	; 0x1d2 <main+0x104>
					currentstate = 3;
 1d2:	00 00       	nop
 1d4:	83 e0       	ldi	r24, 0x03	; 3
 1d6:	90 e0       	ldi	r25, 0x00	; 0
					_delay_ms(500);
				}
				break;
			case 3:
				if (PIND & 0b01000000 || PIND & 0b00100000){ // 5 and 6
 1d8:	83 cf       	rjmp	.-250    	; 0xe0 <main+0x12>
 1da:	86 99       	sbic	0x10, 6	; 16
 1dc:	02 c0       	rjmp	.+4      	; 0x1e2 <main+0x114>
 1de:	85 9b       	sbis	0x10, 5	; 16
					setEndState();
 1e0:	0d c0       	rjmp	.+26     	; 0x1fc <main+0x12e>
 1e2:	61 df       	rcall	.-318    	; 0xa6 <setEndState>
 1e4:	2f ef       	ldi	r18, 0xFF	; 255
 1e6:	84 e3       	ldi	r24, 0x34	; 52
 1e8:	9c e0       	ldi	r25, 0x0C	; 12
 1ea:	21 50       	subi	r18, 0x01	; 1
 1ec:	80 40       	sbci	r24, 0x00	; 0
 1ee:	90 40       	sbci	r25, 0x00	; 0
 1f0:	e1 f7       	brne	.-8      	; 0x1ea <main+0x11c>
 1f2:	00 c0       	rjmp	.+0      	; 0x1f4 <main+0x126>
					currentstate = 4;
 1f4:	00 00       	nop
 1f6:	84 e0       	ldi	r24, 0x04	; 4
 1f8:	90 e0       	ldi	r25, 0x00	; 0
					_delay_ms(500);
				}
				else if (PIND & 0b10000000){ // 7
 1fa:	72 cf       	rjmp	.-284    	; 0xe0 <main+0x12>
 1fc:	87 9b       	sbis	0x10, 7	; 16
					setStateStart();
 1fe:	70 cf       	rjmp	.-288    	; 0xe0 <main+0x12>
 200:	4e df       	rcall	.-356    	; 0x9e <setStateStart>
 202:	2f ef       	ldi	r18, 0xFF	; 255
 204:	84 e3       	ldi	r24, 0x34	; 52
 206:	9c e0       	ldi	r25, 0x0C	; 12
 208:	21 50       	subi	r18, 0x01	; 1
 20a:	80 40       	sbci	r24, 0x00	; 0
 20c:	90 40       	sbci	r25, 0x00	; 0
 20e:	e1 f7       	brne	.-8      	; 0x208 <main+0x13a>
 210:	00 c0       	rjmp	.+0      	; 0x212 <main+0x144>
					currentstate = 0;
 212:	00 00       	nop
 214:	80 e0       	ldi	r24, 0x00	; 0
 216:	90 e0       	ldi	r25, 0x00	; 0
					_delay_ms(500);
				}
				break;
			case 4:
				if (PIND & 0b10000000){ // 7
 218:	63 cf       	rjmp	.-314    	; 0xe0 <main+0x12>
 21a:	87 9b       	sbis	0x10, 7	; 16
					setStateStart();
 21c:	61 cf       	rjmp	.-318    	; 0xe0 <main+0x12>
 21e:	3f df       	rcall	.-386    	; 0x9e <setStateStart>
 220:	2f ef       	ldi	r18, 0xFF	; 255
 222:	84 e3       	ldi	r24, 0x34	; 52
 224:	9c e0       	ldi	r25, 0x0C	; 12
 226:	21 50       	subi	r18, 0x01	; 1
 228:	80 40       	sbci	r24, 0x00	; 0
 22a:	90 40       	sbci	r25, 0x00	; 0
 22c:	e1 f7       	brne	.-8      	; 0x226 <main+0x158>
 22e:	00 c0       	rjmp	.+0      	; 0x230 <main+0x162>
 230:	00 00       	nop
					currentstate = 0;
 232:	80 e0       	ldi	r24, 0x00	; 0
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	54 cf       	rjmp	.-344    	; 0xe0 <main+0x12>

00000238 <_exit>:
 238:	f8 94       	cli

0000023a <__stop_program>:
 23a:	ff cf       	rjmp	.-2      	; 0x23a <__stop_program>
